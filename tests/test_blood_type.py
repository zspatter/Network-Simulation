from network_simulator.BloodType import BloodType
from network_simulator.CompatibilityMarkers import BloodTypeLetter, BloodTypePolarity


def test_is_compatible_donor():
    o_neg = BloodType(BloodTypeLetter.O, BloodTypePolarity.NEG)
    o_pos = BloodType(BloodTypeLetter.O, BloodTypePolarity.POS)
    a_neg = BloodType(BloodTypeLetter.A, BloodTypePolarity.NEG)
    a_pos = BloodType(BloodTypeLetter.A, BloodTypePolarity.POS)
    b_neg = BloodType(BloodTypeLetter.B, BloodTypePolarity.NEG)
    b_pos = BloodType(BloodTypeLetter.B, BloodTypePolarity.POS)
    ab_neg = BloodType(BloodTypeLetter.AB, BloodTypePolarity.NEG)
    ab_pos = BloodType(BloodTypeLetter.AB, BloodTypePolarity.POS)

    assert o_neg.is_compatible_donor(o_neg)
    assert o_neg.is_compatible_donor(o_pos)
    assert o_neg.is_compatible_donor(a_neg)
    assert o_neg.is_compatible_donor(a_pos)
    assert o_neg.is_compatible_donor(b_neg)
    assert o_neg.is_compatible_donor(b_pos)
    assert o_neg.is_compatible_donor(ab_neg)
    assert o_neg.is_compatible_donor(ab_pos)

    assert not o_pos.is_compatible_donor(o_neg)
    assert o_pos.is_compatible_donor(o_pos)
    assert not o_pos.is_compatible_donor(a_neg)
    assert o_pos.is_compatible_donor(a_pos)
    assert not o_pos.is_compatible_donor(b_neg)
    assert o_pos.is_compatible_donor(b_pos)
    assert not o_pos.is_compatible_donor(ab_neg)
    assert o_pos.is_compatible_donor(ab_pos)

    assert not a_neg.is_compatible_donor(o_neg)
    assert not a_neg.is_compatible_donor(o_pos)
    assert a_neg.is_compatible_donor(a_neg)
    assert a_neg.is_compatible_donor(a_pos)
    assert not a_neg.is_compatible_donor(b_neg)
    assert not a_neg.is_compatible_donor(b_pos)
    assert a_neg.is_compatible_donor(ab_neg)
    assert a_neg.is_compatible_donor(ab_pos)

    assert not a_pos.is_compatible_donor(o_neg)
    assert not a_pos.is_compatible_donor(o_pos)
    assert not a_pos.is_compatible_donor(a_neg)
    assert a_pos.is_compatible_donor(a_pos)
    assert not a_pos.is_compatible_donor(b_neg)
    assert not a_pos.is_compatible_donor(b_pos)
    assert not a_pos.is_compatible_donor(ab_neg)
    assert a_pos.is_compatible_donor(ab_pos)

    assert not b_neg.is_compatible_donor(o_neg)
    assert not b_neg.is_compatible_donor(o_pos)
    assert not b_neg.is_compatible_donor(a_neg)
    assert not b_neg.is_compatible_donor(a_pos)
    assert b_neg.is_compatible_donor(b_neg)
    assert b_neg.is_compatible_donor(b_pos)
    assert b_neg.is_compatible_donor(ab_neg)
    assert b_neg.is_compatible_donor(ab_pos)

    assert not b_pos.is_compatible_donor(o_neg)
    assert not b_pos.is_compatible_donor(o_pos)
    assert not b_pos.is_compatible_donor(a_neg)
    assert not b_pos.is_compatible_donor(a_pos)
    assert not b_pos.is_compatible_donor(b_neg)
    assert b_pos.is_compatible_donor(b_pos)
    assert not b_pos.is_compatible_donor(ab_neg)
    assert b_pos.is_compatible_donor(ab_pos)

    assert not ab_neg.is_compatible_donor(o_neg)
    assert not ab_neg.is_compatible_donor(o_pos)
    assert not ab_neg.is_compatible_donor(a_neg)
    assert not ab_neg.is_compatible_donor(a_pos)
    assert not ab_neg.is_compatible_donor(b_neg)
    assert not ab_neg.is_compatible_donor(b_pos)
    assert ab_neg.is_compatible_donor(ab_neg)
    assert ab_neg.is_compatible_donor(ab_pos)

    assert not ab_pos.is_compatible_donor(o_neg)
    assert not ab_pos.is_compatible_donor(o_pos)
    assert not ab_pos.is_compatible_donor(a_neg)
    assert not ab_pos.is_compatible_donor(a_pos)
    assert not ab_pos.is_compatible_donor(b_neg)
    assert not ab_pos.is_compatible_donor(b_pos)
    assert not ab_pos.is_compatible_donor(ab_neg)
    assert ab_pos.is_compatible_donor(ab_pos)
